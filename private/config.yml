---
database:
  map:
    create:
      - name
      - id
      - email
    find:
      - id
    info:
      - rowid
    update:
      - display
      - rowid
  path: "./private/buitsu.db"
  query:
    user:
      create: >
        INSERT INTO
          user (name, id, email)
        VALUES
          (?, ?, ?)
      find: >
        SELECT
          rowid
        FROM
          user
        WHERE
          id = ?
      info: >
        SELECT
          *
        FROM
          user
        WHERE
          rowid = ?
      update: >
        UPDATE
          user
        SET
          display = ?
        WHERE
          rowid = ?
    setup:
      game: >
        CREATE TABLE IF NOT EXISTS game
        (
          rowid INTEGER NOT NULL,
          name TEXT NOT NULL,
          desc TEXT,
          PRIMARY KEY(rowid)
        )
      index: >
        CREATE UNIQUE INDEX IF NOT EXISTS idx_user_id ON user(id)
      user: >
        CREATE TABLE IF NOT EXISTS user
        (
          rowid INTEGER NOT NULL,
          name TEXT NOT NULL,
          id INTEGER NOT NULL,
          email TEXT NOT NULL,
          display TEXT DEFAULT '',
          PRIMARY KEY(rowid)
        )
      score: >
        CREATE TABLE IF NOT EXISTS score
        (
          rowid INTEGER NOT NULL,
          user_id INTEGER NOT NULL,
          game_id INTEGER NOT NULL,
          score INTEGER DEFAULT 0,
          CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES user(rowid),
          CONSTRAINT fk_game FOREIGN KEY (game_id) REFERENCES game(rowid)
        )
  ui:
    close: "DB closed."
    closed: "DB already closed."
    create: "Created new user."
    find: "Found user: "
    open: "DB opened."
    opened: "DB already opened."
    recursionFail: "Max recursion reached."
    setup: "DB setup complete."
    updateFail: "Failed to update user: "
    updateSuccess: "Updated user."
express:
  grace: 30
  port: 3111
  route:
    about: "/about"
    loginFailed: "/login/failed"
    loginGoogle: "/login/google"
    loginGoogleCallback: "/login/google/return"
    loginGoogleCallbackUrl: "https://v2.taiz.me/login/google/return"
    logout: "/logout"
    root: "/"
  startup: 2
  static: public
  ui:
    loginFailed: "Failed to log in with selected OAuth2.0 method, this shouldn't happen."
    shutdown: "Server terminating..."
    shutdownFail: "Server terminated abnormally."
    shutdownSuccess: "Server terminated successfull."
    startup: "Server open, port: "
